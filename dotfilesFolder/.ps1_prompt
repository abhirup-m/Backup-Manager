#!/bin/bash

# TODO: Currently, this is hardcoded. Ideally, this should be rewritten to be configurable.

COL_WHITE_FG="\[\e[38;5;255m\]"
COL_GREY_FG="\[\e[38;5;236m\]"
COL_GREEN_FG="\[\e[38;5;2m\]"
COL_BLUE_FG="\[\e[38;5;27m\]"
COL_RED_FG="\[\e[38;5;160m\]"
COL_GREEN_BG="\[\e[48;5;2m\]"
COL_GREY_BG="\[\e[48;5;236m\]"
COL_RED_BG="\[\e[48;5;200m\]"
COL_BLUE_BG="\[\e[48;5;27m\]"

function ps1_powerline {
  RETCODE=$? # save return code
  NUM_JOBS=$(jobs -rp | wc -l)
  GIT_BRANCH=$(__git_ps1)
  if [[ $PWD == $HOME ]]; then
	  CURRENT_DIR=" ~"
  else
	  CURRENT_DIR=" "$(basename $PWD)
  fi

  local GREY="$COL_GREY$COL_WHITE"
  local GREY_END="\[\e[48;5;2m\]\[\e[38;5;240m\]"

  local GREEN="$COL_GREEN_BG$COL_GREY_FG"
  local GREEN_END="$COL_GREY_BG$COL_GREEN_FG" # when next segment is prompt
  local GREEN_RET_END="$COL_GREY_BG$COL_GREEN_FG" # when next segment is prompt with return code

  local BLUE="$COL_BLUE_BG$COL_WHITE_FG"
  local BLUE_END="$COL_GREEN_BG$COL_BLUE_FG"           # when next segment is git
  local BLUE_END_ALT="$COL_GREY_BG$COL_BLUE_FG"       # when next segment is prompt
  local BLUE_END_RET="$COL_GREY_BG$COL_BLUE_FG"       # when next segment is prompt with return code

  local RET="$COL_GREY_BG$COL_WHITE_FG"
  local RET_END="\[\e[0m\]$COL_GREY_FG\[\e[0m\] "

  local PROMPT="$COL_GREY_BG$COL_WHITE_FG"
  local PROMPT_END="\[\e[0m\]$COL_GREY_FG\[\e[0m\] "

  if [ ! -w "$PWD" ]; then
    # Current directory is not writable
    BLUE_END="\[\e[48;5;160m\]\[\e[38;5;27m\]\[\e[38;5;255m\]  \[\e[48;5;208m\]\[\e[38;5;160m\]"
    BLUE_END_JOBS="\[\e[48;5;160m\]\[\e[38;5;27m\]\[\e[38;5;255m\]  \[\e[48;5;93m\]\[\e[38;5;160m\]"
    BLUE_END_ALT="\[\e[48;5;160m\]\[\e[38;5;27m\]\[\e[38;5;255m\]  \[\e[48;5;236m\]\[\e[38;5;160m\]"
    BLUE_END_RET="\[\e[48;5;160m\]\[\e[38;5;27m\]\[\e[38;5;255m\]  "
  fi

  if [ -z "$GIT_BRANCH" ]; then
    # Is not a git repo
    if [ "$RETCODE" -eq 0 ]; then
        export PS1="$BLUE $CURRENT_DIR $BLUE_END_ALT$PROMPT \$ $PROMPT_END"
    else
        export PS1="$BLUE $CURRENT_DIR $BLUE_END_RET$RET ⚑ $RETCODE $RET_END"
    fi
  else
    # Is a git repo
    if [ "$RETCODE" -eq 0 ]; then
        export PS1="$BLUE $CURRENT_DIR $BLUE_END$GREEN $GIT_BRANCH$GREEN_END$PROMPT \$ $PROMPT_END"
    else
        export PS1="$BLUE $CURRENT_DIR $BLUE_END$GREEN $GIT_BRANCH$GREEN_RET_END$RET ⚑ $RETCODE $RET_END"
    fi

  fi
}

if [  "$TERM" != "linux" ]; then
   export PROMPT_COMMAND="ps1_powerline; $PROMPT_COMMAND"
fi
